{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","props","_this","Object","D_coding_mari23rus_github_io_freecodecamp_calc_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_coding_mari23rus_github_io_freecodecamp_calc_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_coding_mari23rus_github_io_freecodecamp_calc_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleClickNumber","e","state","currentOperation","setState","currentValue","target","innerText","formula","undefined","indexOf","handleClickOperation","result","handleClickClear","bind","D_coding_mari23rus_github_io_freecodecamp_calc_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","handleClickEquals","eval","round","toString","err","operations","value","react__WEBPACK_IMPORTED_MODULE_6___default","id","className","onClick","Component","decimals","Number","Math"],"mappings":"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","file":"static/js/main.a51541fd.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formula: '',\n      currentValue: '',\n      currentOperation: undefined,\n      result: undefined\n    }\n    // this.handleClickNumber = this.handleClick.bind(this);\n    // this.handleClickOperation = this.handleClickOperation.bind(this);\n    this.handleClickClear = this.handleClickClear.bind(this);\n    this.handleClickEquals = this.handleClickEquals.bind(this);\n  }\n\n  handleClickNumber = (e) => {\n    if (this.state.currentOperation) {\n      this.setState({\n        currentValue: this.state.currentValue + e.target.innerText,\n        formula: this.state.formula + this.state.currentOperation,\n        currentOperation: undefined\n      })\n    } else if ((this.state.currentValue.indexOf('.') !== -1 && e.target.innerText === '.') || \n              (this.state.currentValue === '0' && e.target.innerText === '0')) {\n      return;\n    } else {\n      this.setState({\n        currentValue: this.state.currentValue + e.target.innerText\n      })\n    }\n  }\n\n  handleClickOperation = (e) => {\n    if (this.state.currentValue !== '') {\n      this.setState({\n        formula: this.state.formula + this.state.currentValue,\n        currentOperation: e.target.innerText,\n        currentValue: ''\n      })\n    } else {\n      this.setState({\n        currentOperation: e.target.innerText\n      })\n    }\n    \n  }\n\n  handleClickClear(){\n    this.setState({\n      formula: '',\n      currentValue: '',\n      currentOperation: undefined,\n      result: undefined\n    })\n  }\n\n  handleClickEquals() {\n    let formula = this.state.formula;\n    if (this.state.currentValue !== '') {\n      formula += this.state.currentValue;\n      this.setState({\n        formula: formula,\n        currentValue: ''\n      })\n\n    }\n    try {\n      const result = eval(formula);\n      if (typeof result == 'number') {\n        this.setState({\n          formula: '',\n          currentValue: round(result, 5).toString(),\n          result: round(result, 5).toString()\n        })\n      }\n    } catch(err) {\n      this.setState({\n        currentValue: '',\n        formula: '',\n        result: 'ERR'\n      })\n    }\n  }\n\n  render() {\n    let operations = this.state.formula;\n    if (this.state.currentOperation) operations += this.state.currentOperation;\n    let value = this.state.currentValue == '' ? 0 : this.state.currentValue;\n\n    return (\n      <div id=\"app\">\n        <div id=\"display\">\n          <div className=\"output\">{operations}</div>\n          <div className=\"output\"><span className=\"result\">{value}</span></div>\n        </div>\n        <div id=\"clear\" className=\"btn\" onClick={this.handleClickClear}>AC</div>\n        <div id=\"add\" className=\"btn ops\" onClick={this.handleClickOperation}>+</div>\n        <div id=\"subtract\" className=\"btn ops\" onClick={this.handleClickOperation}>-</div>\n        <div id=\"seven\" className=\"btn\" onClick={this.handleClickNumber}>7</div>\n        <div id=\"eight\" className=\"btn\" onClick={this.handleClickNumber}>8</div>\n        <div id=\"nine\" className=\"btn\" onClick={this.handleClickNumber}>9</div>\n        <div id=\"multiply\" className=\"btn ops\" onClick={this.handleClickOperation}>*</div>\n        <div id=\"four\" className=\"btn\" onClick={this.handleClickNumber}>4</div>\n        <div id=\"five\" className=\"btn\" onClick={this.handleClickNumber}>5</div>\n        <div id=\"six\" className=\"btn\" onClick={this.handleClickNumber}>6</div>\n        <div id=\"divide\" className=\"btn ops\" onClick={this.handleClickOperation}>/</div>\n        <div id=\"one\" className=\"btn\" onClick={this.handleClickNumber}>1</div>\n        <div id=\"two\" className=\"btn\" onClick={this.handleClickNumber}>2</div>\n        <div id=\"three\" className=\"btn\" onClick={this.handleClickNumber}>3</div>\n        <div id=\"equals\" className=\"btn ops\" onClick={this.handleClickEquals}>=</div>\n        <div id=\"zero\" className=\"btn\" onClick={this.handleClickNumber}>0</div>\n        <div id=\"decimal\" className=\"btn\" onClick={this.handleClickNumber}>.</div>\n      </div>\n    );\n  }\n}\n\nfunction round(value, decimals) {\n  return Number(Math.round(value+'e'+decimals)+'e-'+decimals);\n}\n\nexport default App;\n"],"sourceRoot":""}